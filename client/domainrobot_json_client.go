// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"foo/client/backup_mx_tasks"
	"foo/client/certificate_tasks"
	"foo/client/contact_tasks"
	"foo/client/document_tasks"
	"foo/client/domain_search"
	"foo/client/domain_tasks"
	"foo/client/guest_account_tasks"
	"foo/client/id4me_agent_tasks"
	"foo/client/id4me_identity_tasks"
	"foo/client/invoice_info_tasks"
	"foo/client/invoice_tasks"
	"foo/client/job_tasks"
	"foo/client/mail_proxy_tasks"
	"foo/client/poll_tasks"
	"foo/client/redirect_tasks"
	"foo/client/session_tasks"
	"foo/client/ssl_contact_tasks"
	"foo/client/subscription_tasks"
	"foo/client/transfer_request_tasks"
	"foo/client/user_2fa_tasks"
	"foo/client/user_verification_confirm"
	"foo/client/whois_tasks"
	"foo/client/zone_tasks"
)

// Default domainrobot JSON HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "api.autodns.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/v1"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new domainrobot JSON HTTP client.
func NewHTTPClient(formats strfmt.Registry) *DomainrobotJSON {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new domainrobot JSON HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *DomainrobotJSON {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new domainrobot JSON client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *DomainrobotJSON {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(DomainrobotJSON)
	cli.Transport = transport

	cli.BackupMxTasks = backup_mx_tasks.New(transport, formats)

	cli.CertificateTasks = certificate_tasks.New(transport, formats)

	cli.ContactTasks = contact_tasks.New(transport, formats)

	cli.DocumentTasks = document_tasks.New(transport, formats)

	cli.DomainSearch = domain_search.New(transport, formats)

	cli.DomainTasks = domain_tasks.New(transport, formats)

	cli.GuestAccountTasks = guest_account_tasks.New(transport, formats)

	cli.Id4meAgentTasks = id4me_agent_tasks.New(transport, formats)

	cli.Id4meIdentityTasks = id4me_identity_tasks.New(transport, formats)

	cli.InvoiceInfoTasks = invoice_info_tasks.New(transport, formats)

	cli.InvoiceTasks = invoice_tasks.New(transport, formats)

	cli.JobTasks = job_tasks.New(transport, formats)

	cli.MailProxyTasks = mail_proxy_tasks.New(transport, formats)

	cli.PollTasks = poll_tasks.New(transport, formats)

	cli.RedirectTasks = redirect_tasks.New(transport, formats)

	cli.SessionTasks = session_tasks.New(transport, formats)

	cli.SslContactTasks = ssl_contact_tasks.New(transport, formats)

	cli.SubscriptionTasks = subscription_tasks.New(transport, formats)

	cli.TransferRequestTasks = transfer_request_tasks.New(transport, formats)

	cli.User2faTasks = user_2fa_tasks.New(transport, formats)

	cli.UserVerificationConfirm = user_verification_confirm.New(transport, formats)

	cli.WhoisTasks = whois_tasks.New(transport, formats)

	cli.ZoneTasks = zone_tasks.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// DomainrobotJSON is a client for domainrobot JSON
type DomainrobotJSON struct {
	BackupMxTasks *backup_mx_tasks.Client

	CertificateTasks *certificate_tasks.Client

	ContactTasks *contact_tasks.Client

	DocumentTasks *document_tasks.Client

	DomainSearch *domain_search.Client

	DomainTasks *domain_tasks.Client

	GuestAccountTasks *guest_account_tasks.Client

	Id4meAgentTasks *id4me_agent_tasks.Client

	Id4meIdentityTasks *id4me_identity_tasks.Client

	InvoiceInfoTasks *invoice_info_tasks.Client

	InvoiceTasks *invoice_tasks.Client

	JobTasks *job_tasks.Client

	MailProxyTasks *mail_proxy_tasks.Client

	PollTasks *poll_tasks.Client

	RedirectTasks *redirect_tasks.Client

	SessionTasks *session_tasks.Client

	SslContactTasks *ssl_contact_tasks.Client

	SubscriptionTasks *subscription_tasks.Client

	TransferRequestTasks *transfer_request_tasks.Client

	User2faTasks *user_2fa_tasks.Client

	UserVerificationConfirm *user_verification_confirm.Client

	WhoisTasks *whois_tasks.Client

	ZoneTasks *zone_tasks.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *DomainrobotJSON) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.BackupMxTasks.SetTransport(transport)

	c.CertificateTasks.SetTransport(transport)

	c.ContactTasks.SetTransport(transport)

	c.DocumentTasks.SetTransport(transport)

	c.DomainSearch.SetTransport(transport)

	c.DomainTasks.SetTransport(transport)

	c.GuestAccountTasks.SetTransport(transport)

	c.Id4meAgentTasks.SetTransport(transport)

	c.Id4meIdentityTasks.SetTransport(transport)

	c.InvoiceInfoTasks.SetTransport(transport)

	c.InvoiceTasks.SetTransport(transport)

	c.JobTasks.SetTransport(transport)

	c.MailProxyTasks.SetTransport(transport)

	c.PollTasks.SetTransport(transport)

	c.RedirectTasks.SetTransport(transport)

	c.SessionTasks.SetTransport(transport)

	c.SslContactTasks.SetTransport(transport)

	c.SubscriptionTasks.SetTransport(transport)

	c.TransferRequestTasks.SetTransport(transport)

	c.User2faTasks.SetTransport(transport)

	c.UserVerificationConfirm.SetTransport(transport)

	c.WhoisTasks.SetTransport(transport)

	c.ZoneTasks.SetTransport(transport)

}
